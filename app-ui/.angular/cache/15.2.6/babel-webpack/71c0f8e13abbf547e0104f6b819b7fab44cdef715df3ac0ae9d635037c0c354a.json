{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class LoginComponent {\n  constructor(authService, router, location) {\n    this.authService = authService;\n    this.router = router;\n    this.location = location;\n    this.show = true;\n    this.loggedIn = false;\n    this.valueChange = new EventEmitter();\n  }\n  onSubmit() {\n    // this.authService.login(this.user.email, this.user.password).subscribe({\n    //   next: (v) => {\n    //     this.loggedIn = true\n    //     this.valueChange.emit(this.user.email)\n    //   },\n    //   error: (e) => {\n    //     if (e.status === 401) {\n    //       this.errorMessage = \"Invalid credentials\"\n    //     }\n    //   },\n    //   complete: () => {\n    //   }\n    // })\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(Location));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  outputs: {\n    valueChange: \"valueChange\"\n  },\n  decls: 2,\n  vars: 0,\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"login works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuY3NzIn0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxnS0FBZ0siLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAoBA,YAAY,QAAgB,eAAe;;;;AAS/D,OAAM,MAAOC,cAAc;EASzBC,YACUC,WAAwB,EACxBC,MAAc,EACdC,QAAkB;IAFlB,gBAAW,GAAXF,WAAW;IACX,WAAM,GAANC,MAAM;IACN,aAAQ,GAARC,QAAQ;IATlB,SAAI,GAAY,IAAI;IAIpB,aAAQ,GAAY,KAAK;IACf,gBAAW,GAAG,IAAIL,YAAY,EAAE;EAIV;EAEhCM,QAAQ;IAEN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IAEA;IACA;EAAA;;AA9BSL,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAM;EAAAC;IAAAC;EAAA;EAAAC;EAAAC;EAAAC;IAAA;MCT3BC,yBAAG;MAAAA,4BAAY;MAAAA,iBAAI","names":["EventEmitter","LoginComponent","constructor","authService","router","location","onSubmit","selectors","outputs","valueChange","decls","vars","template","i0"],"sourceRoot":"","sources":["/home/alaeddine/Desktop/big-data-project/movie-recommendation-app-ui/src/app/auth/login/login.component.ts","/home/alaeddine/Desktop/big-data-project/movie-recommendation-app-ui/src/app/auth/login/login.component.html"],"sourcesContent":["import { Component, EventEmitter, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n\n  show: boolean = true;\n\n\n  errorMessage!: string;\n  loggedIn: boolean = false\n  @Output() valueChange = new EventEmitter()\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private location: Location) { }\n\n  onSubmit() {\n\n    // this.authService.login(this.user.email, this.user.password).subscribe({\n    //   next: (v) => {\n    //     this.loggedIn = true\n    //     this.valueChange.emit(this.user.email)\n    //   },\n    //   error: (e) => {\n    //     if (e.status === 401) {\n    //       this.errorMessage = \"Invalid credentials\"\n    //     }\n\n    //   },\n    //   complete: () => {\n\n    //   }\n    // })\n  }\n\n}\n","<p>login works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}